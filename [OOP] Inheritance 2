#Mutiple Inherience
class Father():
    def gardening(self):
        print("I enjoy gardening")

class Mother():
    def cooking(self):
        print("I love cooking")

#a class inherit from two classes
class Child(Father,Mother):
    def sports(self):
        print("I enjoy sprots")
        
c=Child()
c.gardening()
#I enjoy gardening

c.cooking()
#I love cooking

c.sports()
#I enjoy sprots

#a class inherit from two classes
class Father():
    def skills(self):
        print("gardening,programming")

class Mother():
    def skills(self):
        print("cooking,art")

#a class inherit from two classes
class Child(Father,Mother):
    def skills(self):
        print("sprots")
        
c=Child()
c.skills()
#sports


#a class inherit from two classes
class Child2(Father,Mother):
    def skills(self):
        Father.skills(self)
        Mother.skills(self)
        print("sprots")

c=Child2()
c.skills()
#gardening,programming
#cooking,art
#sports

-------------------------------------------------------------------------------------

class dog():
    def __init__(self,name,age):
        self.name=name
        self.age=age
    
    def speak(self):
        print("Hi I am",self.name, "and I am",self.age,"years old.")
        
    def talk(self):
        print("bark!")
        
class cat(dog):
    def__init__(self,name,age,color):
        #the super() automatically assigned the name and age to the methods for dog class that can be inherit for cat instance
        super().__init__(name,age)
        self.color = color

    def talk(self):
        print("Meow!")

tim = cat("tim",5,"blue")
--
tim.talk() 






















