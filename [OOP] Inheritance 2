#Mutiple Inherience
class Father():
    def gardening(self):
        print("I enjoy gardening")

class Mother():
    def cooking(self):
        print("I love cooking")

#a class inherit from two classes
class Child(Father,Mother):
    def sports(self):
        print("I enjoy sprots")
        
c=Child()
c.gardening()
#I enjoy gardening

c.cooking()
#I love cooking

c.sports()
#I enjoy sprots

#a class inherit from two classes
class Father():
    def skills(self):
        print("gardening,programming")

class Mother():
    def skills(self):
        print("cooking,art")

#a class inherit from two classes
class Child(Father,Mother):
    def skills(self):
        print("sprots")
        
c=Child()
c.skills()
#sports


#a class inherit from two classes
class Child2(Father,Mother):
    def skills(self):
        Father.skills(self)
        Mother.skills(self)
        print("sprots")

c=Child2()
c.skills()
#gardening,programming
#cooking,art
#sports

-------------------------------------------------------------------------------------

class dog():
    def __init__(self,name,age):
        self.name=name
        self.age=age
    
    def speak(self):
        print("Hi I am",self.name, "and I am",self.age,"years old.")
        
    def talk(self):
        print("bark!")

#dog will be the parent class of cat children class
class cat(dog):
    def__init__(self,name,age,color):
        #the super() automatically exercute the init method in dog class
        super().__init__(name,age)
        self.color = color

    def talk(self):
        print("Meow!")

tim = cat("tim",5,"blue")

--instead of printing "bark" it prints "meow" 
--the method has the same name with the parent class method will overwrite the inherited method 
tim.talk() 

--with the same concept above
class cat(dog):
    def __init__(self,name,age,color):
        super().init__(name,age)
        self.name="tech"

tim.speak()
--the output=> Hi I am tech and I am 5 years old.

--------------------------------------------------------------------------------------------------------
class vehicle():
    def __init__(self,price,gas,color):
        self.price = price
        self.gas = gas
        self.color =color
        
    def fillUpTank(self):
        self.gas=100
    
    def emptyTank(self):
        self.gas=0
        
    def gasLeft(self):
        return self.gas
        
class car(vehicle):
    def __init__(self,price,gas,color,speed):
        super.__init(price,gas,color)
        self.speed=speed
     
    def beep(self):
        print("Beep Beep")
        
    
class truck(vehicle):
    def __init__(self,price,gas,color,tires):
        super().__init__(price,gas,color,tires)
        self.tires = tires
    
    def beep(self):
        print("Honk Honk")




















